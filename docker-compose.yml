version: '3'

services:
  alcoves:
    build:
      dockerfile: docker/Dockerfile.dev
    environment:
      # Client
      - VITE_DEV_CSS=false
      - VITE_API_URL=http://localhost:4000
      # API
      - REDIS_HOST=redis
      # When connecting over the container network use the container port not the bound port
      - REDIS_PORT=6379
      # When connecting over the container network use the container port not the bound port
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/alcoves?schema=public
    volumes:
      - ./:/app
      - ./volumes/application:/data
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - 3000:3000
      - 4000:4000

  db:
    image: postgres:15-alpine
    restart: always
    ports:
      - 6005:5432
    volumes:
      - alcoves_postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready', '-U', 'postgres', '-d', 'alcoves']
      retries: 30
      timeout: 5s
      interval: 1s
    user: postgres
    environment:
      POSTGRES_DB: alcoves
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

      STORAGE_ENDPOINT: "http://minio:9000"
      STORAGE_ACCESS_KEY: "minioadmin"
      STORAGE_SECRET_ACCESS_KEY: "minioadmin"
      STORAGE_DOMAIN: "http://minio:9000"
      STROAGE_BUCKET: "alcoves"
      STORAGE_BUCKET_VIDEO_PREFIX: "videos"

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - 6010:6379
    volumes:
      - alcoves_redis_data:/data
    healthcheck:
      test:
        ['CMD-SHELL', 'redis-cli ping']
      retries: 30
      timeout: 5s
      interval: 1s

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - alcoves_minio_data:/data
    command: server /data

volumes:
  alcoves_redis_data:
  alcoves_minio_data:
  alcoves_postgres_data:

networks:
  default:
    name: alcoves
