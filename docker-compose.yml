version: '3'

services:
  alcoves:
    container_name: alcoves
    build:
      dockerfile: docker/Dockerfile.dev
    env_file:
      - .env.local
    volumes:
      - ./:/app
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - 3000:3000
      - 4000:4000

  alcoves_cdn:
    image: nginx:latest
    depends_on:
      - alcoves
    volumes:
      - ./docker/alcoves_cdn.conf:/etc/nginx/nginx.conf
      - alcoves_cdn:/var/cache/nginx
    ports:
      - '4100:80'

  storage_cdn:
    image: nginx:latest
    depends_on:
      - alcoves
    volumes:
      - ./docker/storage_cdn.conf:/etc/nginx/nginx.conf
      - storage_cdn:/var/cache/nginx
    ports:
      - '4200:80'

  minio:
    image: minio/minio
    volumes:
      - minio:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - '9000:9000'
      - '9001:9001'
    command: server /data --console-address ":9001"

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - 6010:6379
    volumes:
      - redis:/data
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping']
      retries: 30
      timeout: 5s
      interval: 1s

  postgres:
    image: postgres:16-alpine
    restart: always
    ports:
      - 6005:5432
    volumes:
      - postgres:/var/lib/postgresql/data/
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready', '-U', 'postgres', '-d', 'alcoves']
      retries: 30
      timeout: 5s
      interval: 1s
    user: postgres
    environment:
      POSTGRES_DB: alcoves
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

volumes:
  minio:
  redis:
  alcoves:
  postgres:
  alcoves_cdn:
  storage_cdn:

networks:
  default:
    name: alcoves
