services:
  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    environment:
      TEST: test
    volumes:
      - ./client:/app
    depends_on:
      - server
    ports:
      - 3000:3000
      - 3001:3001 # HMR

  server:
    container_name: api
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    environment:
      TEST: test
    volumes:
      - ./server:/app
    # depends_on:
    #   - redis
    #   - postgres
    ports:
      - 3005:3005
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://api:3005/health']
      interval: 1s
      timeout: 2s
      retries: 30

  # redis:
  #   container_name: redis
  #   image: redis:latest
  #   restart: always
  #   ports:
  #     - 6100:6379
  #   volumes:
  #     - redis:/data
  #   healthcheck:
  #     test: ['CMD-SHELL', 'redis-cli ping']
  #     retries: 30
  #     timeout: 5s
  #     interval: 1s

  # postgres:
  #   container_name: postgres
  #   image: postgres:16-alpine
  #   restart: always
  #   ports:
  #     - 6200:5432
  #   volumes:
  #     - postgres:/var/lib/postgresql/data/
  #   healthcheck:
  #     test:
  #       ['CMD-SHELL', 'pg_isready', '-U', 'postgres', '-d', 'alcoves']
  #     retries: 30
  #     timeout: 5s
  #     interval: 1s
  #   user: postgres
  #   environment:
  #     POSTGRES_DB: alcoves
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres

  # asynqmon:
  #   container_name: asynqmon
  #   image: hibiken/asynqmon
  #   environment:
  #     PORT: 5050
  #     REDIS_ADDR: redis:6379
  #   depends_on:
  #     - redis
  #   ports:
  #     - 5050:5050

  # api:
  #   container_name: api
  #   build:
  #     context: ./apps/api
  #     dockerfile: Dockerfile.dev
  #   environment:
  #     ALCOVES_API_DB_HOST: postgres
  #     ALCOVES_API_DB_PORT: 5432
  #     ALCOVES_API_DB_USER: postgres
  #     ALCOVES_API_DB_PASSWORD: postgres
  #     ALCOVES_API_DB_NAME: alcoves
  #     ALCOVES_API_REDIS_ADDR: redis:6379
  #   volumes:
  #     - ./apps/api:/app
  #   depends_on:
  #     - redis
  #     - postgres
  #   ports:
  #     - 4000:4000
  #   healthcheck:
  #     test: ['CMD', 'curl', '-f', 'http://api:4000/health']
  #     interval: 1s
  #     timeout: 2s
  #     retries: 30

  # worker:
  #   container_name: worker
  #   build:
  #     context: ./apps/api
  #     dockerfile: Dockerfile.dev
  #   environment:
  #     ALCOVES_API_WORKER_MODE: 1
  #     ALCOVES_API_REDIS_ADDR: redis:6379
  #   volumes:
  #     - ./apps/api:/app
  #   depends_on:
  #     - api
  #     - redis
  #     - postgres

  #   alcoves:
  #     container_name: alcoves
  #     build:
  #       dockerfile: docker/Dockerfile.dev
  #     env_file:
  #       - .env.local
  #     volumes:
  #       - ./:/app
  #     depends_on:
  #       redis:
  #         condition: service_healthy
  #     ports:
  #       - 3000:3000
  #       - 4000:4000

  #   alcoves_cdn:
  #     image: nginx:latest
  #     depends_on:
  #       - alcoves
  #     volumes:
  #       - ./docker/alcoves_cdn.conf:/etc/nginx/nginx.conf
  #       - alcoves_cdn:/var/cache/nginx
  #     ports:
  #       - '4100:80'

  #   storage_cdn:
  #     image: nginx:latest
  #     depends_on:
  #       - alcoves
  #     volumes:
  #       - ./docker/storage_cdn.conf:/etc/nginx/nginx.conf
  #       - storage_cdn:/var/cache/nginx
  #     ports:
  #       - '4200:80'

  #   minio:
  #     image: minio/minio
  #     volumes:
  #       - minio:/data
  #     environment:
  #       MINIO_ROOT_USER: minioadmin
  #       MINIO_ROOT_PASSWORD: minioadmin
  #     ports:
  #       - '9000:9000'
  #       - '9001:9001'
  #     command: server /data --console-address ":9001"

# volumes:
  # redis:
  # postgres:
  # minio:
  # alcoves:
  # alcoves_cdn:
  # storage_cdn:

networks:
  default:
    name: alcoves
