x-client-environment: &client-environment
  PRIVATE_ALCOVES_API_URL: http://server:3000
  PUBLIC_ALCOVES_API_URL: http://localhost:3000
  # VITE_GOOGLE_CLIENT_ID: $ALCOVES_AUTH_GOOGLE_ID
  # VITE_GOOGLE_REDIRECT_URL: $ALCOVES_AUTH_GOOGLE_REDIRECT_URL

x-server-environment: &server-environment
  CORS_ORIGIN: http://localhost:5173
  ALCOVES_DB_URL: $ALCOVES_DB_URL
  ALCOVES_OBJECT_STORE_DEFAULT_BUCKET: alcoves
  ALCOVES_OBJECT_STORE_ENDPOINT: $ALCOVES_OBJECT_STORE_ENDPOINT
  ALCOVES_OBJECT_STORE_PUBLIC_ENDPOINT: $ALCOVES_OBJECT_STORE_PUBLIC_ENDPOINT
  ALCOVES_OBJECT_STORE_ACCESS_KEY_ID: minioadmin
  ALCOVES_OBJECT_STORE_SECRET_ACCESS_KEY: minioadmin
  ALCOVES_AUTH_GOOGLE_ID: $ALCOVES_AUTH_GOOGLE_ID
  ALCOVES_AUTH_GOOGLE_SECRET: $ALCOVES_AUTH_GOOGLE_SECRET
  ALCOVES_AUTH_GOOGLE_REDIRECT_URL: $ALCOVES_AUTH_GOOGLE_REDIRECT_URL
  ALCOVES_TASK_DB_PORT: 6379
  ALCOVES_TASK_DB_HOST: task_db
  ALCOVES_TASK_WORKER_CONCURRENCY: 4
  ALCOVES_DB_CONNECTION_STRING: postgres://postgres:postgres@postgres:5432/alcoves

services:
  # client:
  #   build:
  #     context: client
  #     dockerfile: Dockerfile.dev
  #   command: bun run dev
  #   user: '${UID}:${GID}'
  #   environment:
  #     <<: *client-environment
  #   volumes:
  #     - ./client:/app
  #   depends_on:
  #     - server
  #   ports:
  #     - 5173:5173
  server:
    build:
      context: server
      dockerfile: Dockerfile.dev
    command: bun run dev
    tty: true
    user: '${UID}:${GID}'
    environment:
      <<: *server-environment
    volumes:
      - ./server:/app
    depends_on:
      - task_db
      - minio
      - minio_mb
      - postgres
    ports:
      - 3000:3000
  task_db:
    image: eqalpha/keydb:latest
    restart: always
    attach: false
    ulimits:
      memlock: -1
    ports:
      - 6100:6379
    volumes:
      - task_db:/eqalpha/keydb
  postgres:
    image: postgres:17
    restart: always
    attach: false
    ports:
      - 6200:5432
    volumes:
      - postgres:/var/lib/postgresql/data/
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready', '-U', 'postgres', '-d', 'alcoves' ]
      retries: 30
      timeout: 5s
      interval: 1s
    user: postgres
    environment:
      POSTGRES_DB: alcoves
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
  minio:
    image: minio/minio:latest
    attach: false
    volumes:
      - minio:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - '9000:9000'
      - '9001:9001'
    command: server /data --console-address ":9001"

  minio_mb:
    image: minio/mc:latest
    attach: false
    depends_on:
      - minio
    entrypoint: sh -c "mc config host add minio http://minio:9000 minioadmin minioadmin && mc mb minio/alcoves"

volumes:
  minio:
  task_db:
  postgres:
