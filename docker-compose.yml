x-api-environment: &api-environment
    ALCOVES_ENABLE_WORKER: false
    ALCOVES_TASK_DB_PORT: 6379
    ALCOVES_TASK_DB_HOST: task_db
    ALCOVES_DB_CONNECTION_STRING: postgres://postgres:postgres@postgres:5432/alcoves

x-worker-environment: &worker-environment
    ALCOVES_ENABLE_WORKER: true
    ALCOVES_TASK_DB_PORT: 6379
    ALCOVES_TASK_DB_HOST: task_db
    ALCOVES_DB_CONNECTION_STRING: postgres://postgres:postgres@postgres:5432/alcoves

services:
    api:
        container_name: api
        build:
            context: .
            dockerfile: Dockerfile
        command: bun run dev:api
        environment:
            <<: *api-environment
        volumes:
            - ./:/app
            - /app/node_modules
        depends_on:
            - task_db
            - minio
            - minio_mb
            - postgres
        ports:
            - 3000:3000
    worker:
        container_name: worker
        build:
            context: .
            dockerfile: Dockerfile
        command: bun run dev:worker
        environment:
            <<: *worker-environment
        volumes:
            - ./:/app
            - /app/node_modules
        depends_on:
            - api
            - task_db
            - minio
            - minio_mb
            - postgres
    task_db:
        container_name: task_db
        image: eqalpha/keydb:latest
        restart: always
        ulimits:
            memlock: -1
        ports:
            - 6100:6379
        volumes:
            - task_db:/eqalpha/keydb
    postgres:
        container_name: postgres
        image: postgres:16
        restart: always
        ports:
            - 6200:5432
        volumes:
            - postgres:/var/lib/postgresql/data/
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready', '-U', 'postgres', '-d', 'alcoves']
            retries: 30
            timeout: 5s
            interval: 1s
        user: postgres
        environment:
            POSTGRES_DB: alcoves
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
    minio:
        image: minio/minio
        volumes:
            - minio:/data
        environment:
            MINIO_ROOT_USER: minioadmin
            MINIO_ROOT_PASSWORD: minioadmin
        ports:
            - '9000:9000'
            - '9001:9001'
        command: server /data --console-address ":9001"

    minio_mb:
        image: minio/mc
        depends_on:
            - minio
        entrypoint: sh -c "mc config host add minio http://minio:9000 minioadmin minioadmin && mc mb minio/alcoves"
volumes:
    minio:
    task_db:
    postgres:
networks:
    default:
        name: alcoves
