datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String       @id @default(cuid())
  email       String       @unique
  username    String
  password    String
  image       String?
  medias      Media[]
  memberships Membership[]
  updatedAt   DateTime     @updatedAt
  createdAt   DateTime     @default(now())
}

model Pod {
  id          String       @id @default(cuid())
  name        String
  image       String?
  medias      Media[]
  memberships Membership[]
  updatedAt   DateTime     @updatedAt
  createdAt   DateTime     @default(now())
}

model Membership {
  id        String   @id @default(cuid())
  role      String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  podId     String
  pod       Pod      @relation(fields: [podId], references: [id])
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Media {
  id          Int      @id @default(autoincrement())
  size        Int
  title       String
  originalUrl String
  filename    String
  mimeType    String
  podId       String
  pod         Pod      @relation(fields: [podId], references: [id])
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
}

// Media Metadata
// {
// "creationTime": string,
// "width": string,
// "height": string,

// // Union field metadata can be only one of the following:
// "photo": {
// "cameraMake": string,
// "cameraModel": string,
// "focalLength": number,
// "apertureFNumber": number,
// "isoEquivalent": integer,
// "exposureTime": string
// },
// "video": {
// "cameraMake": string,
// "cameraModel": string,
// "fps": number,
// "status": enum (VideoProcessingStatus) UNSPECIFIED PROCESSING READY FAILED
// }
// }
